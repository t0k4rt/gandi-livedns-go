// Code generated by go-swagger; DO NOT EDIT.

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	models "github.com/t0k4rt/gandi-livedns-go/models"
)

// GetDomainsReader is a Reader for the GetDomains structure.
type GetDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDomainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetDomainsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDomainsOK creates a GetDomainsOK with default headers values
func NewGetDomainsOK() *GetDomainsOK {
	return &GetDomainsOK{}
}

/*GetDomainsOK handles this case with default header values.

OK
*/
type GetDomainsOK struct {
	Payload []*GetDomainsOKBodyItems0
}

func (o *GetDomainsOK) Error() string {
	return fmt.Sprintf("[GET /domains][%d] getDomainsOK  %+v", 200, o.Payload)
}

func (o *GetDomainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomainsBadRequest creates a GetDomainsBadRequest with default headers values
func NewGetDomainsBadRequest() *GetDomainsBadRequest {
	return &GetDomainsBadRequest{}
}

/*GetDomainsBadRequest handles this case with default header values.

Not OK
*/
type GetDomainsBadRequest struct {
	Payload *models.Return400
}

func (o *GetDomainsBadRequest) Error() string {
	return fmt.Sprintf("[GET /domains][%d] getDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *GetDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Return400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomainsDefault creates a GetDomainsDefault with default headers values
func NewGetDomainsDefault(code int) *GetDomainsDefault {
	return &GetDomainsDefault{
		_statusCode: code,
	}
}

/*GetDomainsDefault handles this case with default header values.

Unexpected error
*/
type GetDomainsDefault struct {
	_statusCode int

	Payload *models.Return40x
}

// Code gets the status code for the get domains default response
func (o *GetDomainsDefault) Code() int {
	return o._statusCode
}

func (o *GetDomainsDefault) Error() string {
	return fmt.Sprintf("[GET /domains][%d] GetDomains default  %+v", o._statusCode, o.Payload)
}

func (o *GetDomainsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Return40x)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetDomainsOKBodyItems0 get domains o k body items0
swagger:model GetDomainsOKBodyItems0
*/
type GetDomainsOKBodyItems0 struct {

	// fqdn
	Fqdn string `json:"fqdn,omitempty"`
}

// Validate validates this get domains o k body items0
func (o *GetDomainsOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDomainsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDomainsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetDomainsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
