// Code generated by go-swagger; DO NOT EDIT.

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostDomainsReader is a Reader for the PostDomains structure.
type PostDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostDomainsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDomainsCreated creates a PostDomainsCreated with default headers values
func NewPostDomainsCreated() *PostDomainsCreated {
	return &PostDomainsCreated{}
}

/*PostDomainsCreated handles this case with default header values.

OK
*/
type PostDomainsCreated struct {
	Payload *PostDomainsCreatedBody
}

func (o *PostDomainsCreated) Error() string {
	return fmt.Sprintf("[POST /domains][%d] postDomainsCreated  %+v", 201, o.Payload)
}

func (o *PostDomainsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostDomainsCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostDomainsBody post domains body
swagger:model PostDomainsBody
*/
type PostDomainsBody struct {

	// fqdn
	// Required: true
	Fqdn *string `json:"fqdn"`

	// zone uuid
	// Required: true
	ZoneUUID *string `json:"zone_uuid"`
}

// Validate validates this post domains body
func (o *PostDomainsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFqdn(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateZoneUUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostDomainsBody) validateFqdn(formats strfmt.Registry) error {

	if err := validate.Required("domain"+"."+"fqdn", "body", o.Fqdn); err != nil {
		return err
	}

	return nil
}

func (o *PostDomainsBody) validateZoneUUID(formats strfmt.Registry) error {

	if err := validate.Required("domain"+"."+"zone_uuid", "body", o.ZoneUUID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostDomainsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDomainsBody) UnmarshalBinary(b []byte) error {
	var res PostDomainsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostDomainsCreatedBody post domains created body
swagger:model PostDomainsCreatedBody
*/
type PostDomainsCreatedBody struct {

	// message
	Message string `json:"message,omitempty"`

	// uuid
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this post domains created body
func (o *PostDomainsCreatedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDomainsCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDomainsCreatedBody) UnmarshalBinary(b []byte) error {
	var res PostDomainsCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
